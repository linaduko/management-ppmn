version: '3.9'

networks:
  internal:
    driver: ${NETWORKS_DRIVER}

volumes:
  mysql:
    driver: ${VOLUMES_DRIVER}
  redis:
    driver: ${VOLUMES_DRIVER}

services:
  
  nginx:
    container_name: nginx
    build: ./docker/nginx
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
      - ${NGINX_HOST_LOG_PATH}:/var/log/nginx
    ports:
      - "${NGINX_HOST_HTTP_PORT}:80"
      - "${NGINX_HOST_HTTPS_PORT}:443" 
    working_dir: /etc/nginx
    links:
      - python
    healthcheck:
      test: ["CMD", "curl", "-f", "localhost://localhost || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - internal

  php:
    container_name: php
    build: ./docker/php
    volumes:  
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    working_dir: /var/www/html
    networks:
      - internal
    depends_on:
      mysql:
        condition: service_healthy

  python:
    container_name: python
    build: ./docker/python
    volumes:
      - ${APP_CODE_PATH_HOST}:${APP_CODE_PATH_CONTAINER}${APP_CODE_CONTAINER_FLAG}
    working_dir: /var/www/html
    networks:
      - internal
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy

  mysql:
    container_name: mysql
    build: ./docker/mysql
    environment:
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    ports:
      - "${MYSQL_PORT}:3306"
    volumes:
      - ${DATA_PATH_HOST}/mysql:/var/lib/mysql
      - ${MYSQL_ENTRYPOINT_INITDB}:/docker-entrypoint-initdb.d
    networks:
      - internal
    healthcheck:
      test: "exit 0"
  
  redis:
    container_name: redis
    build: ./docker/redis    
    ports:
      - "${REDIS_PORT}:6379"
    environment:
      - ${DATA_PATH_HOST}/redis:/data
    command: --requirepass ${REDIS_PASSWORD}
    networks:
      - internal
    healthcheck:
      test: "exit 0"
